#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.7).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `#!/bin/sh' line above, then type `sh FILE'.
#
lock_dir=_sh14300
# Made on 2018-09-14 18:36 EDT by <n00952091@osprey.unfcsd.unf.edu>.
# Source directory was `/home/91/n00952091/COP3404/COP3404_P1/SystemsSoftware-master'.
#
# Existing files will *not* be overwritten, unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    762 -rw-r--r-- Data.java
#    868 -rw-r--r-- Honya.txt
#    268 -rw-r--r-- input.txt
#     58 -rw-r--r-- makefile
#   3459 -rw-r--r-- ProjectOne.java
#    774 -rw-r--r-- README.md
#
MD5SUM=${MD5SUM-md5sum}
f=`${MD5SUM} --version | egrep '^md5sum .*(core|text)utils'`
test -n "${f}" && md5check=true || md5check=false
${md5check} || \
  echo 'Note: not verifying md5sums.  Consider installing GNU coreutils.'
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    case `$dir/gettext --version 2>&1 | sed 1q` in
      *GNU*) gettext_dir=$dir ;;
    esac
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null
then if (echo -n test; echo 1,2,3) | grep n >/dev/null
     then shar_n= shar_c='
'
     else shar_n=-n shar_c= ; fi
else shar_n= shar_c='\c' ; fi
f=shar-touch.$$
st1=200112312359.59
st2=123123592001.59
st2tr=123123592001.5 # old SysV 14-char limit
st3=1231235901

if touch -am -t ${st1} ${f} >/dev/null 2>&1 && \
   test ! -f ${st1} && test -f ${f}; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'

elif touch -am ${st2} ${f} >/dev/null 2>&1 && \
   test ! -f ${st2} && test ! -f ${st2tr} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'

elif touch -am ${st3} ${f} >/dev/null 2>&1 && \
   test ! -f ${st3} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'

else
  shar_touch=:
  echo
  ${echo} 'WARNING: not restoring timestamps.  Consider getting and'
  ${echo} 'installing GNU `touch'\'', distributed in GNU coreutils...'
  echo
fi
rm -f ${st1} ${st2} ${st2tr} ${st3} ${f}
#
if test ! -d ${lock_dir}
then : ; else ${echo} 'lock directory '${lock_dir}' exists'
  exit 1
fi
if mkdir ${lock_dir}
then ${echo} 'x - created lock directory `'${lock_dir}\''.'
else ${echo} 'x - failed to create lock directory `'${lock_dir}\''.'
  exit 1
fi
# ============= Data.java ==============
if test -f 'Data.java' && test "$first_param" != -c; then
  ${echo} 'x -SKIPPING Data.java (file already exists)'
else
${echo} 'x - extracting Data.java (binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 Data.java
M<'5B;&EC(&-L87-S($1A=&$@>PH@("`@4W1R:6YG(&ME>3L*("`@(%-T<FEN
M9R!V86QU93L*("`@(&EN="!H87-H.PH*("`@($1A=&$H4W1R:6YG(&LL(%-T
M<FEN9R!V86PI('L*("`@("`@("!K97D@/2!K.PH@("`@("`@('9A;'5E(#T@
M=F%L.PH@("`@("`@(&AA<V@@/2!T:&ES+FAA<VA#;V1E*"D["B`@("!]"@H@
M("`@0$]V97)R:61E"B`@("!P=6)L:6,@:6YT(&AA<VA#;V1E*"D*("`@('L*
M("`@("`@("!I;G0@:&%S:"`](#<["B`@("`@("`@9F]R("AI;G0@:2`](#`[
M(&D@/"!K97DN;&5N9W1H*"D[(&DK*RD@>PH@("`@("`@("`@("!H87-H(#T@
M:&%S:"HS,2`K(&ME>2YC:&%R070H:2D["B`@("`@("`@?0H@("`@("`@(')E
M='5R;B!H87-H.PH@("`@?0H*("`@($!/=F5R<FED90H@("`@<'5B;&EC(&)O
M;VQE86X@97%U86QS*$]B:F5C="!O8FHI('L*("`@("`@("!I9B`H;V)J(#T]
M(&YU;&PI(')E='5R;B!F86QS93L*("`@("`@("!I9B`H(2AO8FH@:6YS=&%N
M8V5O9B!$871A*2D*("`@("`@("`@("`@<F5T=7)N(&9A;'-E.PH@("`@("`@
M(&EF("AO8FH@/3T@=&AI<RD*("`@("`@("`@("`@<F5T=7)N('1R=64["B`@
M("`@("`@<F5T=7)N('1H:7,N9V5T2&%S:"@I(#T]("@H1&%T82D@;V)J*2YG
M971(87-H*"D["B`@("!]"@H@("`@<'5B;&EC(&EN="!G971(87-H*"D@>PH@
M("`@("`@(')E='5R;B!H87-H.PH@("`@?0H*("`@('!U8FQI8R!3=')I;F<@
J9V5T5F%L=64H*2!["B`@("`@("`@<F5T=7)N('9A;'5E.PH@("`@?0I]
`
end
SHAR_EOF
  (set 20 18 09 14 18 07 15 'Data.java'; eval "$shar_touch") &&
  chmod 0644 'Data.java'
if test $? -ne 0
then ${echo} 'restore of Data.java failed'
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'Data.java: MD5 check failed'
       ) << \SHAR_EOF
8dff300cd330006a500a8204e3b192e8  Data.java
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'Data.java'` -ne 762 && \
  ${echo} 'restoration warning:  size of Data.java is not 762'
  fi
fi
# ============= Honya.txt ==============
if test -f 'Honya.txt' && test "$first_param" != -c; then
  ${echo} 'x -SKIPPING Honya.txt (file already exists)'
else
${echo} 'x - extracting Honya.txt (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'Honya.txt' &&
stored moss 25 at location 0
X
ERROR eno not found
X
ERROR fred not found
X
ERROR gorge not found
X
stored gorge 18 at location 1
X
gorge found at location 1 with value 18
X
stored assu 00 at location 2
X
stored eno eno at location 3
X
ERROR enon not found
X
stored fdfds 2131 at location 4
X
stored Kenny 26 at location 5
X
stored RJ 18565 at location 6
X
stored Roth 4558 at location 7
X
ERROR StaleMAte not found
X
stored Booger 8956 at location 8
X
stored okay 5446 at location 9
X
stored whatthhellisaeno 101010 at location 10
X
stored oramoss 1515 at location 11
X
stored alfredo 45222 at location 12
X
ERROR 55555 not found
X
stored dummy 789453 at location 13
X
stored lawl 4 at location 14
X
ERROR lawl already exists at location 14
X
stored youknow 56 at location 15
X
stored doyouknow 56 at location 16
X
stored nowyouknow 555 at location 17
X
stored okayimdone 5633 at location 18
X
SHAR_EOF
  (set 20 18 09 14 18 07 15 'Honya.txt'; eval "$shar_touch") &&
  chmod 0644 'Honya.txt'
if test $? -ne 0
then ${echo} 'restore of Honya.txt failed'
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'Honya.txt: MD5 check failed'
       ) << \SHAR_EOF
1ded37cc2d16f2044db83e76e49910f7  Honya.txt
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'Honya.txt'` -ne 868 && \
  ${echo} 'restoration warning:  size of Honya.txt is not 868'
  fi
fi
# ============= input.txt ==============
if test -f 'input.txt' && test "$first_param" != -c; then
  ${echo} 'x -SKIPPING input.txt (file already exists)'
else
${echo} 'x - extracting input.txt (binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 input.txt
M;6]S<R`R-0IE;F\*9G)E9`IG;W)G90IG;W)G92`Q.`IG;W)G90IA<W-U(#`P
M"F5N;R!E;F\*96YO;@IF9&9D<R`R,3,Q"DME;FYY(#(V"E)*(#$X-38U"E)O
M=&@@-#4U.`I3=&%L94U!=&4*0F]O9V5R(#@Y-38*;VMA>2`U-#0V"G=H871T
M:&AE;&QI<V%E;F\@,3`Q,#$P"F]R86UO<W,@,34Q-0IA;&9R961O(#0U,C(R
M"C4U-34U"F1U;6UY(#<X.30U,PIL87=L(#0*;&%W;"`U"GEO=6MN;W<@-38*
K9&]Y;W5K;F]W(#4V"FYO=WEO=6MN;W<@-34U"F]K87EI;61O;F4@-38S,S8*
`
end
SHAR_EOF
  (set 20 18 09 14 18 07 16 'input.txt'; eval "$shar_touch") &&
  chmod 0644 'input.txt'
if test $? -ne 0
then ${echo} 'restore of input.txt failed'
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'input.txt: MD5 check failed'
       ) << \SHAR_EOF
4ce8454031ce450d1f4314a15606532b  input.txt
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'input.txt'` -ne 268 && \
  ${echo} 'restoration warning:  size of input.txt is not 268'
  fi
fi
# ============= makefile ==============
if test -f 'makefile' && test "$first_param" != -c; then
  ${echo} 'x -SKIPPING makefile (file already exists)'
else
${echo} 'x - extracting makefile (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'makefile' &&
ProjectOne.class: ProjectOne.java
X	javac ProjectOne.java 
SHAR_EOF
  (set 20 18 09 14 18 07 15 'makefile'; eval "$shar_touch") &&
  chmod 0644 'makefile'
if test $? -ne 0
then ${echo} 'restore of makefile failed'
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'makefile: MD5 check failed'
       ) << \SHAR_EOF
3373a8a1b1dbbd5e0e1d46ff89df632d  makefile
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'makefile'` -ne 58 && \
  ${echo} 'restoration warning:  size of makefile is not 58'
  fi
fi
# ============= ProjectOne.java ==============
if test -f 'ProjectOne.java' && test "$first_param" != -c; then
  ${echo} 'x -SKIPPING ProjectOne.java (file already exists)'
else
${echo} 'x - extracting ProjectOne.java (binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 ProjectOne.java
M:6UP;W)T(&IA=F$N:6\N*CL*:6UP;W)T(&IA=F$N=71I;"XJ.PII;7!O<G0@
M:F%V82YU=&EL+D%R<F%Y3&ES=#L*:6UP;W)T(&IA=F$N=71I;"Y38V%N;F5R
M.PH*<'5B;&EC(&-L87-S(%!R;VIE8W1/;F4@>PH@("`@07)R87E,:7-T/$1A
M=&$^('-T;W)E9#L*("`@(%!R:6YT5W)I=&5R('=R:71E<B`](&YU;&P["@H@
M("`@4')O:F5C=$]N92AI;G0@<WHI('L*("`@("`@("!S=&]R960@/2`@;F5W
M($%R<F%Y3&ES=#Q$871A/BAS>BD["B`@("`@("`@=')Y('L*("`@("`@("`@
M("`@=W)I=&5R(#T@;F5W(%!R:6YT5W)I=&5R*")(;VYY82YT>'0B*3L*("`@
M("`@("!]"B`@("`@("`@8V%T8V@@*$9I;&5.;W1&;W5N9$5X8V5P=&EO;B!E
M*2![?0H@("`@?0H*("`@('!U8FQI8R!I;G0@<V5A<F-H*&EN="!H87-H*2![
M"B`@("`@("`@:6YT(')E="`]("TQ.PH@("`@("`@(&9O<BA$871A(&1T(#H@
M<W1O<F5D*2!["B`@("`@("`@("`@(&EF*&1T+F=E=$AA<V@H*2`]/2!H87-H
M*0H@("`@("`@("`@("`@("`@<F5T(#T@<W1O<F5D+FEN9&5X3V8H9'0I.PH@
M("`@("`@('T*("`@("`@("!R971U<FX@<F5T.PH@("`@?0H*("`@('!U8FQI
M8R!V;VED(&EN<V5R=$EN<'5T*%-T<FEN9R!K+"!3=')I;F<@=BD@>PH@("`@
M("`@("\O4WES=&5M+F]U="YP<FEN=&QN*")K97D@(BMK*R(@=F%L("(K=BD[
M"B`@("`@("`@1&%T82!E;G1R>2`](&YE=R!$871A*&LL('8I.PH@("`@("`@
M(&EN="!P;W,@/2!S96%R8V@H96YT<GDN9V5T2&%S:"@I*3L*("`@("`@("!I
M9B`H=BYE<75A;',H(B(I*2![("\O;F\@;G5M8F5R"B`@("`@("`@("`@(&EF
M*'!O<R`]/2`M,2D@>PH@("`@("`@("`@("`@("`@=W)I=&5R+G!R:6YT;&XH
M(D524D]2("(@*R!K("L@(B!N;W0@9F]U;F0B*3L*("`@("`@("`@("`@("`@
M('=R:71E<BYP<FEN=&QN*"(B*3L*("`@("`@("`@("`@?2!E;'-E('L@+R]A
M;')E861Y('-T;W)E9`H@("`@("`@("`@("`@("`@=W)I=&5R+G!R:6YT;&XH
M:R`K("(@9F]U;F0@870@;&]C871I;VX@(B`K('!O<R`K("(@=VET:"!V86QU
M92`B("L@<W1O<F5D+F=E="AP;W,I+F=E=%9A;'5E*"DI.PH@("`@("`@("`@
M("`@("`@=W)I=&5R+G!R:6YT;&XH(B(I.PH@("`@("`@("`@("!]"B`@("`@
M("`@?2!E;'-E('L@+R]I9B!T:&5R92!I<R!N=6UB97(*("`@("`@("`@("`@
M:68H<&]S(#T]("TQ*2![("\O:70@9&]E<VYT(&5X:7-T('EE=`H@("`@("`@
M("`@("`@("`@<W1O<F5D+F%D9"AE;G1R>2D["B`@("`@("`@("`@("`@("!W
M<FET97(N<')I;G1L;B@B<W1O<F5D("(@*R!K("L@(B`B("L@=B`K("(@870@
M;&]C871I;VX@(B`K('-T;W)E9"YI;F1E>$]F*&5N=')Y*2D["B`@("`@("`@
M("`@("`@("!W<FET97(N<')I;G1L;B@B(BD["B`@("`@("`@("`@('T@96QS
M92![("\O86QR96%D>2!S=&]R960*("`@("`@("`@("`@("`@('=R:71E<BYP
M<FEN=&QN*")%4E)/4B`B("L@:R`K("(@86QR96%D>2!E>&ES=',@870@;&]C
M871I;VX@(B`K('!O<RD["B`@("`@("`@("`@("`@("!W<FET97(N<')I;G1L
M;B@B(BD["B`@("`@("`@("`@('T*("`@("`@("!]"B`@("!]"@H@("`@<'5B
M;&EC('-T871I8R!V;VED(&UA:6XH4W1R:6YG6UT@87)G<RD@=&AR;W=S($9I
M;&5.;W1&;W5N9$5X8V5P=&EO;BP@24]%>&-E<'1I;VX@>PH@("`@("`@(%!R
M;VIE8W1/;F4@9&5M;R`](&YE=R!0<F]J96-T3VYE*#$P-#DI.PH@("`@("`@
M("\O86-C97!T('1H92!I;G!U="!F<F]M('1H92!C;VYS;VQE"B`@("`@("`@
M+R]38V%N;F5R(&EN<'5T(#T@;F5W(%-C86YN97(H4WES=&5M+FEN*3L*("`@
M("`@("`O+U-Y<W1E;2YO=70N<')I;G1L;B@B16YT97(@:6YP=70@9FEL92!N
M86UE.B`B*3L*("`@("`@("`O+U-T<FEN9R!I<"`](&EN<'5T+FYE>'1,:6YE
M*"D["B`@("`@("`@+R]3>7-T96TN;W5T+G!R:6YT;&XH(B!I;G!U="!F:6QE
M(&YA;64Z("(K:7`I.PH@("`@("`@($)U9F9E<F5D4F5A9&5R(')E861E<CL*
M("`@("`@("!I9B`H87)G<RYL96YG=&@@/3T@,"D@>PH@("`@("`@("`@("!3
M>7-T96TN;W5T+G!R:6YT;&XH(D524D]2($YO(&EN<'5T(&9I;&4@<W!E8VEF
M:65D+B(I.PH@("`@("`@("`@("!3>7-T96TN97AI="@Q*3L*("`@("`@("!]
M"B`@("`@("`@=')Y('L*("`@("`@("`@("`@<F5A9&5R(#T@;F5W($)U9F9E
M<F5D4F5A9&5R*&YE=R!&:6QE4F5A9&5R*&%R9W-;,%TI*3L*("`@("`@("`@
M("`@4W1R:6YG(&QI;F4@/2`B(CL*("`@("`@("`@("`@=VAI;&4@*"AL:6YE
M(#T@<F5A9&5R+G)E861,:6YE*"DI("$](&YU;&PI('L*("`@("`@("`@("`@
M("`@(&QI;F4@/2!L:6YE+G)E<&QA8V5!;&PH(EQ<<RLB+"`B("(I.R`O+VUA
M:V4@<W5R92!T:&5R92!I<R!O;FQY(&$@<VEN9VQE('-P86-E(&)E='=E96X@
M=&AE('!O<W-I8FQE('-T<FEN9R!A;F0@;G5M8F5R"B`@("`@("`@("`@("`@
M("!I9B`H(6QI;F4N97%U86QS*"(B*2`F)B`A;&EN92YE<75A;',H(B`B*2D@
M>R`O+VEG;F]R92!A;GD@8FQA;FL@;&EN97,@:68@=&AE>2!E>&ES=`H@("`@
M("`@("`@("`@("`@("`@(&EF("AL:6YE+F-H87)!="@P*2`]/2`G("<I('L*
M("`@("`@("`@("`@("`@("`@("`@("`@;&EN92`](&QI;F4N<W5B<W1R:6YG
M*#$I.R`O+VUA:V4@<W5R92!T;R!G970@<FED(&]F(&%N>2!P<F5C961I;F<@
M<W!A8V5S"B`@("`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@
M("`@("\O4WES=&5M+F]U="YP<FEN=&QN*&QI;F4I.PH@("`@("`@("`@("`@
M("`@("`@(%-T<FEN9UM=(&QI;F53<&QI="`](&QI;F4N<W!L:70H(B`B*3L@
M+R]S=')I;F<@:6X@:6YD97@@,"P@;W!T:6]N86P@;G5M8F5R(&EN(&EN9&5X
M(#$*("`@("`@("`@("`@("`@("`@("`O*F9O<BAI;G0@:3TP.R!I/"!L:6YE
M4W!L:70N;&5N9W1H.R!I*RLI"B`@("`@("`@("`@("`@("`@("`@("`@(%-Y
M<W1E;2YO=70N<')I;G1L;BAL:6YE4W!L:71;:5TI.RHO"B`@("`@("`@("`@
M("`@("`@("`@+R]C:&5C:R!I9B!T:&5R92!I<R!A(&YU;6)E<@H@("`@("`@
M("`@("`@("`@("`@(%-T<FEN9R!K97D@/2!L:6YE4W!L:71;,%T["B`@("`@
M("`@("`@("`@("`@("`@4W1R:6YG('9A;"`]("(B.PH@("`@("`@("`@("`@
M("`@("`@(&EF("AL:6YE4W!L:70N;&5N9W1H(#X@,2D@=F%L(#T@;&EN95-P
M;&ET6S%=.PH@("`@("`@("`@("`@("`@("`@(&1E;6\N:6YS97)T26YP=70H
M:V5Y+"!V86PI.PH@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("!]"B`@
M("`@("`@("`@(')E861E<BYC;&]S92@I.PH@("`@("`@("`@("!D96UO+G=R
M:71E<BYC;&]S92@I.PH@("`@("`@('T*("`@("`@("!C871C:"`H1FEL94YO
M=$9O=6YD17AC97!T:6]N(&4I('L*("`@("`@("`@("`@4WES=&5M+F]U="YP
M<FEN=&QN*")%4E)/4B!);G!U="!F:6QE(&YO="!F;W5N9"XB*3L*("`@("`@
G("`@("`@4WES=&5M+F5X:70H,BD["B`@("`@("`@?0H@("`@?0I]
`
end
SHAR_EOF
  (set 20 18 09 14 18 07 16 'ProjectOne.java'; eval "$shar_touch") &&
  chmod 0644 'ProjectOne.java'
if test $? -ne 0
then ${echo} 'restore of ProjectOne.java failed'
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'ProjectOne.java: MD5 check failed'
       ) << \SHAR_EOF
dd21e3eea5a4ac0b332fa1debd58ae1c  ProjectOne.java
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'ProjectOne.java'` -ne 3459 && \
  ${echo} 'restoration warning:  size of ProjectOne.java is not 3459'
  fi
fi
# ============= README.md ==============
if test -f 'README.md' && test "$first_param" != -c; then
  ${echo} 'x -SKIPPING README.md (file already exists)'
else
${echo} 'x - extracting README.md (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'README.md' &&
# SystemsSoftware
Fall 2018 - 09/14/2018
X
Honya Elfayoumy
X
n00952091
X
Project One - Hash Table
X
X
X
X
X  i. The purpose of this project is to create a Hash Table that will be used by my assembler (Pass One and Pass Two) 
X  
X  ii. ProjectOne.java file: implementation of the program
X  Data.java file: contains the ArrayList class
X  
X  iii. input.txt file: Consists of strings (with and without numbers).
X  Ones without numbers: searched for in the array.
X  Ones with numbers: assigned a spot in the array.
X
X  iv. Honya.txt file: output file that is generated from the placement of the strings (using the input file).
X  If an error occured, it will be printed in the file.
X  
X  Makefile file: The makefile compiles the ProjectOne.java and Data.java file and runs Input.txt.
X  
X  
SHAR_EOF
  (set 20 18 09 14 18 07 15 'README.md'; eval "$shar_touch") &&
  chmod 0644 'README.md'
if test $? -ne 0
then ${echo} 'restore of README.md failed'
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'README.md: MD5 check failed'
       ) << \SHAR_EOF
1e8b5e9ff578237d7713a9a0d11ed68b  README.md
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'README.md'` -ne 774 && \
  ${echo} 'restoration warning:  size of README.md is not 774'
  fi
fi
if rm -fr ${lock_dir}
then ${echo} 'x - removed lock directory `'${lock_dir}\''.'
else ${echo} 'x - failed to remove lock directory `'${lock_dir}\''.'
  exit 1
fi
exit 0
